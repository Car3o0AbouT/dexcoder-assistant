<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd

	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!--<context:component-scan base-package="com.dexcoder.assistant.*">-->
    <!--</context:component-scan>-->

    <!-- 启用@Aspect支持 -->
    <aop:aspectj-autoproxy/>

    <!-- 等同于下面注掉部分  多个配置文件可用,号分隔 -->
    <context:property-placeholder location="classpath:oracle-init.properties"/>

    <task:annotation-driven/>

    <!--<bean id="dynamicDataSource" class="com.dexcoder.dalspring.datasource.DynamicDataSource">-->
    <!--<property name="dsConfigFile" value="dynamic-ds.xml"/>-->
    <!--</bean>-->

    <!--<bean id="dynamicDsInterceptor" class="com.dexcoder.dalspring.datasource.DynamicDsInterceptor"></bean>-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName">
            <value>${driverClassName}</value>
        </property>
        <property name="url">
            <value>${jdbcUrl}</value>
        </property>
        <property name="username">
            <value>${username}</value>
        </property>
        <property name="password">
            <value>${password}</value>
        </property>
        <property name="initialSize">
            <value>${initialSize}</value>
        </property>
        <property name="maxActive">
            <value>${maxActive}</value>
        </property>
        <property name="maxIdle">
            <value>${maxIdle}</value>
        </property>
        <property name="maxWait">
            <value>${maxWait}</value>
        </property>
    </bean>

    <!-- 事务管理器配置,单数据源事务 -->
    <!--<bean id="transactionManager" class="org.springframework.dal.datasource.DataSourceTransactionManager">-->
    <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 配置事务的传播特性 &ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="add*" propagation="REQUIRED"/>-->
    <!--<tx:method name="save*" propagation="REQUIRED"/>-->
    <!--<tx:method name="insert*" propagation="REQUIRED"/>-->
    <!--<tx:method name="del*" propagation="REQUIRED"/>-->
    <!--<tx:method name="update*" propagation="REQUIRED"/>-->
    <!--<tx:method name="*" read-only="true"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!-- 配置哪些方法使用事务 com. 包下的所有类的所有方法 -->
    <!--<aop:config>-->
    <!--<aop:pointcut id="allManagerMethod" expression="execution(* com.dexcoder.assistant.transaction.*.*(..))"/>-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod"/>-->
    <!--</aop:config>-->


    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="fetchSize">
            <value>${jdbcTemplate.fetchSize}</value>
        </property>
    </bean>

    <bean id="jdbcDao" class="com.dexcoder.dal.spring.JdbcDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="keyGenerator" ref="oracleKeyGenerator"/>
        <property name="sqlFactory" ref="sqlFactory"/>
    </bean>
    <bean id="oracleKeyGenerator" class="com.dexcoder.dal.handler.OracleKeyGenerator"/>
    <bean id="sqlFactory" class="com.dexcoder.dal.SimpleSqlFactory">
        <!--<property name="sqlLocation" value="user-sql.xml"/>-->
    </bean>
    <bean id="pageControl" class="com.dexcoder.dal.spring.page.PageControl">
        <property name="pageSqlHandler" ref="smartPageSqlHandler"/>
    </bean>
    <bean id="smartPageSqlHandler" class="com.dexcoder.dal.spring.page.SmartPageSqlHandler"/>

</beans>